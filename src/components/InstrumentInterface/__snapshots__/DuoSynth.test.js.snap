// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div
  className="instrument-interface__container"
>
  <HeaderModule
    instrumentTitle="Duo Synth"
  />
  <div
    className="instrument-interface__main-section"
  >
    <div
      className="instrument-interface__seperator"
    >
      <h2
        className="instrument-interface__module-heading"
      >
        Voice A
      </h2>
    </div>
    <EnvelopeModule
      additionalNesting={
        Array [
          "voice0",
        ]
      }
      envelopeData={
        Object {
          "attack": 0.01,
          "attackCurve": "linear",
          "decay": 0,
          "release": 0.5,
          "releaseCurve": "exponential",
          "sustain": 1,
        }
      }
      handleChange={[MockFunction]}
      instrumentId="5542150612118159"
    />
    <OscillatorModule
      additionalNesting={
        Array [
          "voice0",
        ]
      }
      handleChange={[MockFunction]}
      instrumentId="5542150612118159"
      oscillatorData={
        Object {
          "detune": 0,
          "mute": false,
          "phase": 0,
          "type": "sine",
          "volume": 0,
        }
      }
    />
    <FilterEnvelopeModule
      additionalNesting={
        Array [
          "voice0",
        ]
      }
      filterEnvelopeData={
        Object {
          "attack": 0.01,
          "attackCurve": "linear",
          "baseFrequency": 200,
          "decay": 0,
          "exponent": 2,
          "octaves": 7,
          "release": 0.5,
          "releaseCurve": "exponential",
          "sustain": 1,
        }
      }
      handleChange={[MockFunction]}
      instrumentId="5542150612118159"
    />
    <FilterModule
      additionalNesting={
        Array [
          "voice0",
        ]
      }
      filterData={
        Object {
          "Q": 6,
          "frequency": 350,
          "gain": 0,
          "rolloff": -24,
          "type": "lowpass",
        }
      }
      handleChange={[MockFunction]}
      instrumentId="5542150612118159"
    />
  </div>
  <div
    className="instrument-interface__aside-section"
  >
    <div>
      <Switch
        handleChange={[Function]}
        optionsData={
          Array [
            Object {
              "id": "voiceA",
              "name": "current-voice",
              "text": "Voice A",
              "value": "voiceA",
            },
            Object {
              "id": "voiceB",
              "name": "current-voice",
              "text": "Voice B",
              "value": "voiceB",
            },
          ]
        }
        rowDescription="Select Voice"
        value="voiceA"
      />
    </div>
    <Dial
      dataMax={8}
      dataMin={0.25}
      dialRange={270}
      dialStartOffset={225}
      snapToSteps={true}
      stepSize={0.05}
      updateValueCallback={[Function]}
      value={1.5}
    >
      <Component />
    </Dial>
    <Dial
      dataMax={5}
      dataMin={0}
      dialRange={270}
      dialStartOffset={225}
      snapToSteps={true}
      stepSize={0.05}
      updateValueCallback={[Function]}
      value={0.5}
    >
      <Component />
    </Dial>
    <Dial
      dataMax={1000}
      dataMin={5}
      dialRange={270}
      dialStartOffset={225}
      snapToSteps={true}
      stepSize={5}
      updateValueCallback={[Function]}
      value={5}
    >
      <Component />
    </Dial>
    <Dial
      dataMax={20}
      dataMin={-80}
      dialRange={270}
      dialStartOffset={225}
      snapToSteps={true}
      stepSize={0.25}
      updateValueCallback={[Function]}
      value={0}
    >
      <Component />
    </Dial>
  </div>
</div>
`;
